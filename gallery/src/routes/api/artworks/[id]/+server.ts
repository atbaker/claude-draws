import { json } from '@sveltejs/kit';
import type { RequestHandler } from './$types';

// Transform D1 snake_case to camelCase for frontend
function transformArtwork(artwork: any) {
	return {
		id: artwork.id,
		title: artwork.title,
		artistStatement: artwork.artist_statement,
		imageUrl: artwork.image_url,
		submissionId: artwork.submission_id,
		createdAt: artwork.created_at,
		videoUrl: artwork.video_url,
		prompt: artwork.prompt,
		autogenerated: Boolean(artwork.autogenerated)
	};
}

export const GET: RequestHandler = async ({ platform, params }) => {
	const db = platform?.env?.DB;

	if (!db) {
		return json({ error: 'Database not available' }, { status: 500 });
	}

	const { id } = params;

	if (!id) {
		return json({ error: 'Artwork ID is required' }, { status: 400 });
	}

	try {
		const result = await db
			.prepare(
				`SELECT id, title, artist_statement, image_url, submission_id, created_at, video_url, prompt, autogenerated
				FROM artworks
				WHERE id = ?`
			)
			.bind(id)
			.first();

		if (!result) {
			return json({ error: 'Artwork not found' }, { status: 404 });
		}

		return json({
			success: true,
			artwork: transformArtwork(result)
		});
	} catch (error) {
		console.error('Error fetching artwork:', error);
		return json(
			{
				error: 'Failed to fetch artwork',
				details: error instanceof Error ? error.message : 'Unknown error'
			},
			{ status: 500 }
		);
	}
};
